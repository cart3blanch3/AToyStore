import React, { useContext, useRef, useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { CartContext } from '../contexts/CartContext'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º CartContext
import { useAuthContext } from '../contexts/AuthContext'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º AuthContext
import './CartDropdown.css'; 

const API_BASE_URL = 'http://localhost:5253'; 

const CartDropdown = () => {
    const { cartItems, handleRemoveCartItem } = useContext(CartContext); // –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏ —Ñ—É–Ω–∫—Ü–∏–∏
    const { isAuthenticated } = useAuthContext(); // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const [isOpen, setIsOpen] = useState(false);
    const cartRef = useRef();

    useEffect(() => {
        const handleClickOutside = (event) => {
            if (cartRef.current && !cartRef.current.contains(event.target)) {
                setIsOpen(false);
            }
        };
        document.addEventListener('mousedown', handleClickOutside);
        return () => {
            document.removeEventListener('mousedown', handleClickOutside);
        };
    }, []);

    return (
        <div className="cart-dropdown" ref={cartRef}>
            <button className="cart-icon" onClick={() => setIsOpen(!isOpen)}>
                üõí <span className="item-count">{cartItems.length}</span>
            </button>

            {isOpen && (
                <div className="cart-dropdown-content">
                    {cartItems.length === 0 ? (
                        <p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
                    ) : (
                        <>
                            <ul>
                                {cartItems.map(item => (
                                    <li key={item.id} className="cart-item">
                                        <img 
                                            src={`${API_BASE_URL}${item.imageUrl}`} 
                                            alt={item.name} 
                                            className="cart-item-image" 
                                        />
                                        <div className="cart-item-details">
                                            <span className="cart-item-name">{item.name}</span>
                                            <span className="cart-item-price">{item.price} ‚Ç∏</span>
                                            <span className="cart-item-quantity">x {item.quantity}</span>
                                        </div>
                                        <button className="remove-button" onClick={() => handleRemoveCartItem(item.id)}>–£–¥–∞–ª–∏—Ç—å</button>
                                    </li>
                                ))}
                            </ul>
                            {isAuthenticated ? (
                                <Link to="/checkout">
                                    <button className="checkout-button">–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</button>
                                </Link>
                            ) : (
                                <p>–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.</p>
                            )}
                        </>
                    )}
                </div>
            )}
        </div>
    );
};

export default CartDropdown;
